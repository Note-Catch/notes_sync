{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/v1/health_check/ping": {
      "get": {
        "tags": [
          "Health check"
        ],
        "summary": "API server health check",
        "operationId": "health_check_api_v1_health_check_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/health_check/broker": {
      "get": {
        "tags": [
          "Health check"
        ],
        "summary": "Message broker health check",
        "operationId": "health_check_broker_api_v1_health_check_broker_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/oauth2/signup": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Signup",
        "operationId": "signup_api_v1_oauth2_signup_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignupResponse",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SignupResponse"
                    },
                    {
                      "$ref": "#/components/schemas/UserAlreadyExistsResponse"
                    }
                  ],
                  "title": "Response Signup Api V1 Oauth2 Signup Post"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserAlreadyExistsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBasic": []
          }
        ]
      }
    },
    "/api/v1/oauth2/auth": {
      "post": {
        "tags": [
          "Authorization"
        ],
        "summary": "Auth",
        "operationId": "auth_api_v1_oauth2_auth_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_auth_api_v1_oauth2_auth_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_auth_api_v1_oauth2_auth_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_auth_api_v1_oauth2_auth_post"
      },
      "ErrorCode": {
        "type": "integer",
        "enum": [
          0
        ],
        "const": 0,
        "title": "ErrorCode"
      },
      "GenericSuccessResponseItems": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "items": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Items"
          }
        },
        "type": "object",
        "required": [
          "count",
          "items"
        ],
        "title": "GenericSuccessResponseItems"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PingResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": "Pong!"
          }
        },
        "type": "object",
        "title": "PingResponse"
      },
      "SignupRequest": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login"
          },
          "password": {
            "type": "string",
            "title": "Password"
          }
        },
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "title": "SignupRequest"
      },
      "SignupResponse": {
        "properties": {
          "response": {
            "$ref": "#/components/schemas/GenericSuccessResponseItems"
          }
        },
        "type": "object",
        "required": [
          "response"
        ],
        "title": "SignupResponse"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "UserAlreadyExistsResponse": {
        "properties": {
          "error_code": {
            "$ref": "#/components/schemas/ErrorCode"
          },
          "error_message": {
            "type": "string",
            "title": "Error Message",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "error_code"
        ],
        "title": "UserAlreadyExistsResponse"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "HTTPBasic": {
        "type": "http",
        "scheme": "basic"
      }
    }
  }
}